/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { RentRoom, RentRoomInterface } from "../../contracts/RentRoom";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "getRoomCode",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "periodInDays",
        type: "uint256",
      },
    ],
    name: "pay",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "roomExpires",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "roomOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6106698061007e6000396000f3fe60806040526004361061007f5760003560e01c8063999dacb91161004e578063999dacb914610112578063c290d69114610132578063d1e0700914610145578063f2fde38b1461015a57600080fd5b80633ccfd60b1461008b57806346d92cb2146100a2578063715018a6146100cb5780638da5cb5b146100e057600080fd5b3661008657005b600080fd5b34801561009757600080fd5b506100a061017a565b005b3480156100ae57600080fd5b506100b860025481565b6040519081526020015b60405180910390f35b3480156100d757600080fd5b506100a0610190565b3480156100ec57600080fd5b506000546001600160a01b03165b6040516001600160a01b0390911681526020016100c2565b34801561011e57600080fd5b506001546100fa906001600160a01b031681565b6100a0610140366004610598565b6101a4565b34801561015157600080fd5b506100b861028e565b34801561016657600080fd5b506100a06101753660046105b1565b6102e9565b61018261035f565b4761018d33826103b9565b50565b61019861035f565b6101a260006104d7565b565b60006101b7662386f26fc10000836105f7565b90506101c1610527565b156102035760405162461bcd60e51b815260206004820152600d60248201526c1493d3d357d3d0d0d554125151609a1b60448201526064015b60405180910390fd5b803410156102435760405162461bcd60e51b815260206004820152600d60248201526c494e56414c49445f505249434560981b60448201526064016101fa565b600180546001600160a01b0319163317905561026282620151806105f7565b61026c9042610614565b6002553481101561028a5761028a336102858334610627565b6103b9565b5050565b6001546000906001600160a01b031633146102dc5760405162461bcd60e51b815260206004820152600e60248201526d2727aa2fa927a7a6afa7aba722a960911b60448201526064016101fa565b6102e4610541565b905090565b6102f161035f565b6001600160a01b0381166103565760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101fa565b61018d816104d7565b6000546001600160a01b031633146101a25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101fa565b804710156104095760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016101fa565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610456576040519150601f19603f3d011682016040523d82523d6000602084013e61045b565b606091505b50509050806104d25760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016101fa565b505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006002546000141580156102e457504260025411905090565b6000620f4240423360405160200161057592919091825260601b6bffffffffffffffffffffffff1916602082015260340190565b6040516020818303038152906040528051906020012060001c6102e4919061063a565b6000602082840312156105aa57600080fd5b5035919050565b6000602082840312156105c357600080fd5b81356001600160a01b03811681146105da57600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761060e5761060e6105e1565b92915050565b8082018082111561060e5761060e6105e1565b8181038181111561060e5761060e6105e1565b60008261065757634e487b7160e01b600052601260045260246000fd5b50069056fea164736f6c6343000812000a";

type RentRoomConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RentRoomConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RentRoom__factory extends ContractFactory {
  constructor(...args: RentRoomConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RentRoom> {
    return super.deploy(overrides || {}) as Promise<RentRoom>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): RentRoom {
    return super.attach(address) as RentRoom;
  }
  override connect(signer: Signer): RentRoom__factory {
    return super.connect(signer) as RentRoom__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RentRoomInterface {
    return new utils.Interface(_abi) as RentRoomInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RentRoom {
    return new Contract(address, _abi, signerOrProvider) as RentRoom;
  }
}
